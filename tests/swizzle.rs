// Generated by swizzles. Do not edit.
use glam::{Vec2, Vec3, Vec3A, Vec4};

#[test]
fn test_vec4_swizzles() {
    let v = Vec4::new(1.0, 2.0, 3.0, 4.0);
    assert_eq!(v.xxxx(), Vec4::new(1.0, 1.0, 1.0, 1.0));
    assert_eq!(v.xxxy(), Vec4::new(1.0, 1.0, 1.0, 2.0));
    assert_eq!(v.xxxz(), Vec4::new(1.0, 1.0, 1.0, 3.0));
    assert_eq!(v.xxxw(), Vec4::new(1.0, 1.0, 1.0, 4.0));
    assert_eq!(v.xxyx(), Vec4::new(1.0, 1.0, 2.0, 1.0));
    assert_eq!(v.xxyy(), Vec4::new(1.0, 1.0, 2.0, 2.0));
    assert_eq!(v.xxyz(), Vec4::new(1.0, 1.0, 2.0, 3.0));
    assert_eq!(v.xxyw(), Vec4::new(1.0, 1.0, 2.0, 4.0));
    assert_eq!(v.xxzx(), Vec4::new(1.0, 1.0, 3.0, 1.0));
    assert_eq!(v.xxzy(), Vec4::new(1.0, 1.0, 3.0, 2.0));
    assert_eq!(v.xxzz(), Vec4::new(1.0, 1.0, 3.0, 3.0));
    assert_eq!(v.xxzw(), Vec4::new(1.0, 1.0, 3.0, 4.0));
    assert_eq!(v.xxwx(), Vec4::new(1.0, 1.0, 4.0, 1.0));
    assert_eq!(v.xxwy(), Vec4::new(1.0, 1.0, 4.0, 2.0));
    assert_eq!(v.xxwz(), Vec4::new(1.0, 1.0, 4.0, 3.0));
    assert_eq!(v.xxww(), Vec4::new(1.0, 1.0, 4.0, 4.0));
    assert_eq!(v.xyxx(), Vec4::new(1.0, 2.0, 1.0, 1.0));
    assert_eq!(v.xyxy(), Vec4::new(1.0, 2.0, 1.0, 2.0));
    assert_eq!(v.xyxz(), Vec4::new(1.0, 2.0, 1.0, 3.0));
    assert_eq!(v.xyxw(), Vec4::new(1.0, 2.0, 1.0, 4.0));
    assert_eq!(v.xyyx(), Vec4::new(1.0, 2.0, 2.0, 1.0));
    assert_eq!(v.xyyy(), Vec4::new(1.0, 2.0, 2.0, 2.0));
    assert_eq!(v.xyyz(), Vec4::new(1.0, 2.0, 2.0, 3.0));
    assert_eq!(v.xyyw(), Vec4::new(1.0, 2.0, 2.0, 4.0));
    assert_eq!(v.xyzx(), Vec4::new(1.0, 2.0, 3.0, 1.0));
    assert_eq!(v.xyzy(), Vec4::new(1.0, 2.0, 3.0, 2.0));
    assert_eq!(v.xyzz(), Vec4::new(1.0, 2.0, 3.0, 3.0));
    assert_eq!(v.xywx(), Vec4::new(1.0, 2.0, 4.0, 1.0));
    assert_eq!(v.xywy(), Vec4::new(1.0, 2.0, 4.0, 2.0));
    assert_eq!(v.xywz(), Vec4::new(1.0, 2.0, 4.0, 3.0));
    assert_eq!(v.xyww(), Vec4::new(1.0, 2.0, 4.0, 4.0));
    assert_eq!(v.xzxx(), Vec4::new(1.0, 3.0, 1.0, 1.0));
    assert_eq!(v.xzxy(), Vec4::new(1.0, 3.0, 1.0, 2.0));
    assert_eq!(v.xzxz(), Vec4::new(1.0, 3.0, 1.0, 3.0));
    assert_eq!(v.xzxw(), Vec4::new(1.0, 3.0, 1.0, 4.0));
    assert_eq!(v.xzyx(), Vec4::new(1.0, 3.0, 2.0, 1.0));
    assert_eq!(v.xzyy(), Vec4::new(1.0, 3.0, 2.0, 2.0));
    assert_eq!(v.xzyz(), Vec4::new(1.0, 3.0, 2.0, 3.0));
    assert_eq!(v.xzyw(), Vec4::new(1.0, 3.0, 2.0, 4.0));
    assert_eq!(v.xzzx(), Vec4::new(1.0, 3.0, 3.0, 1.0));
    assert_eq!(v.xzzy(), Vec4::new(1.0, 3.0, 3.0, 2.0));
    assert_eq!(v.xzzz(), Vec4::new(1.0, 3.0, 3.0, 3.0));
    assert_eq!(v.xzzw(), Vec4::new(1.0, 3.0, 3.0, 4.0));
    assert_eq!(v.xzwx(), Vec4::new(1.0, 3.0, 4.0, 1.0));
    assert_eq!(v.xzwy(), Vec4::new(1.0, 3.0, 4.0, 2.0));
    assert_eq!(v.xzwz(), Vec4::new(1.0, 3.0, 4.0, 3.0));
    assert_eq!(v.xzww(), Vec4::new(1.0, 3.0, 4.0, 4.0));
    assert_eq!(v.xwxx(), Vec4::new(1.0, 4.0, 1.0, 1.0));
    assert_eq!(v.xwxy(), Vec4::new(1.0, 4.0, 1.0, 2.0));
    assert_eq!(v.xwxz(), Vec4::new(1.0, 4.0, 1.0, 3.0));
    assert_eq!(v.xwxw(), Vec4::new(1.0, 4.0, 1.0, 4.0));
    assert_eq!(v.xwyx(), Vec4::new(1.0, 4.0, 2.0, 1.0));
    assert_eq!(v.xwyy(), Vec4::new(1.0, 4.0, 2.0, 2.0));
    assert_eq!(v.xwyz(), Vec4::new(1.0, 4.0, 2.0, 3.0));
    assert_eq!(v.xwyw(), Vec4::new(1.0, 4.0, 2.0, 4.0));
    assert_eq!(v.xwzx(), Vec4::new(1.0, 4.0, 3.0, 1.0));
    assert_eq!(v.xwzy(), Vec4::new(1.0, 4.0, 3.0, 2.0));
    assert_eq!(v.xwzz(), Vec4::new(1.0, 4.0, 3.0, 3.0));
    assert_eq!(v.xwzw(), Vec4::new(1.0, 4.0, 3.0, 4.0));
    assert_eq!(v.xwwx(), Vec4::new(1.0, 4.0, 4.0, 1.0));
    assert_eq!(v.xwwy(), Vec4::new(1.0, 4.0, 4.0, 2.0));
    assert_eq!(v.xwwz(), Vec4::new(1.0, 4.0, 4.0, 3.0));
    assert_eq!(v.xwww(), Vec4::new(1.0, 4.0, 4.0, 4.0));
    assert_eq!(v.yxxx(), Vec4::new(2.0, 1.0, 1.0, 1.0));
    assert_eq!(v.yxxy(), Vec4::new(2.0, 1.0, 1.0, 2.0));
    assert_eq!(v.yxxz(), Vec4::new(2.0, 1.0, 1.0, 3.0));
    assert_eq!(v.yxxw(), Vec4::new(2.0, 1.0, 1.0, 4.0));
    assert_eq!(v.yxyx(), Vec4::new(2.0, 1.0, 2.0, 1.0));
    assert_eq!(v.yxyy(), Vec4::new(2.0, 1.0, 2.0, 2.0));
    assert_eq!(v.yxyz(), Vec4::new(2.0, 1.0, 2.0, 3.0));
    assert_eq!(v.yxyw(), Vec4::new(2.0, 1.0, 2.0, 4.0));
    assert_eq!(v.yxzx(), Vec4::new(2.0, 1.0, 3.0, 1.0));
    assert_eq!(v.yxzy(), Vec4::new(2.0, 1.0, 3.0, 2.0));
    assert_eq!(v.yxzz(), Vec4::new(2.0, 1.0, 3.0, 3.0));
    assert_eq!(v.yxzw(), Vec4::new(2.0, 1.0, 3.0, 4.0));
    assert_eq!(v.yxwx(), Vec4::new(2.0, 1.0, 4.0, 1.0));
    assert_eq!(v.yxwy(), Vec4::new(2.0, 1.0, 4.0, 2.0));
    assert_eq!(v.yxwz(), Vec4::new(2.0, 1.0, 4.0, 3.0));
    assert_eq!(v.yxww(), Vec4::new(2.0, 1.0, 4.0, 4.0));
    assert_eq!(v.yyxx(), Vec4::new(2.0, 2.0, 1.0, 1.0));
    assert_eq!(v.yyxy(), Vec4::new(2.0, 2.0, 1.0, 2.0));
    assert_eq!(v.yyxz(), Vec4::new(2.0, 2.0, 1.0, 3.0));
    assert_eq!(v.yyxw(), Vec4::new(2.0, 2.0, 1.0, 4.0));
    assert_eq!(v.yyyx(), Vec4::new(2.0, 2.0, 2.0, 1.0));
    assert_eq!(v.yyyy(), Vec4::new(2.0, 2.0, 2.0, 2.0));
    assert_eq!(v.yyyz(), Vec4::new(2.0, 2.0, 2.0, 3.0));
    assert_eq!(v.yyyw(), Vec4::new(2.0, 2.0, 2.0, 4.0));
    assert_eq!(v.yyzx(), Vec4::new(2.0, 2.0, 3.0, 1.0));
    assert_eq!(v.yyzy(), Vec4::new(2.0, 2.0, 3.0, 2.0));
    assert_eq!(v.yyzz(), Vec4::new(2.0, 2.0, 3.0, 3.0));
    assert_eq!(v.yyzw(), Vec4::new(2.0, 2.0, 3.0, 4.0));
    assert_eq!(v.yywx(), Vec4::new(2.0, 2.0, 4.0, 1.0));
    assert_eq!(v.yywy(), Vec4::new(2.0, 2.0, 4.0, 2.0));
    assert_eq!(v.yywz(), Vec4::new(2.0, 2.0, 4.0, 3.0));
    assert_eq!(v.yyww(), Vec4::new(2.0, 2.0, 4.0, 4.0));
    assert_eq!(v.yzxx(), Vec4::new(2.0, 3.0, 1.0, 1.0));
    assert_eq!(v.yzxy(), Vec4::new(2.0, 3.0, 1.0, 2.0));
    assert_eq!(v.yzxz(), Vec4::new(2.0, 3.0, 1.0, 3.0));
    assert_eq!(v.yzxw(), Vec4::new(2.0, 3.0, 1.0, 4.0));
    assert_eq!(v.yzyx(), Vec4::new(2.0, 3.0, 2.0, 1.0));
    assert_eq!(v.yzyy(), Vec4::new(2.0, 3.0, 2.0, 2.0));
    assert_eq!(v.yzyz(), Vec4::new(2.0, 3.0, 2.0, 3.0));
    assert_eq!(v.yzyw(), Vec4::new(2.0, 3.0, 2.0, 4.0));
    assert_eq!(v.yzzx(), Vec4::new(2.0, 3.0, 3.0, 1.0));
    assert_eq!(v.yzzy(), Vec4::new(2.0, 3.0, 3.0, 2.0));
    assert_eq!(v.yzzz(), Vec4::new(2.0, 3.0, 3.0, 3.0));
    assert_eq!(v.yzzw(), Vec4::new(2.0, 3.0, 3.0, 4.0));
    assert_eq!(v.yzwx(), Vec4::new(2.0, 3.0, 4.0, 1.0));
    assert_eq!(v.yzwy(), Vec4::new(2.0, 3.0, 4.0, 2.0));
    assert_eq!(v.yzwz(), Vec4::new(2.0, 3.0, 4.0, 3.0));
    assert_eq!(v.yzww(), Vec4::new(2.0, 3.0, 4.0, 4.0));
    assert_eq!(v.ywxx(), Vec4::new(2.0, 4.0, 1.0, 1.0));
    assert_eq!(v.ywxy(), Vec4::new(2.0, 4.0, 1.0, 2.0));
    assert_eq!(v.ywxz(), Vec4::new(2.0, 4.0, 1.0, 3.0));
    assert_eq!(v.ywxw(), Vec4::new(2.0, 4.0, 1.0, 4.0));
    assert_eq!(v.ywyx(), Vec4::new(2.0, 4.0, 2.0, 1.0));
    assert_eq!(v.ywyy(), Vec4::new(2.0, 4.0, 2.0, 2.0));
    assert_eq!(v.ywyz(), Vec4::new(2.0, 4.0, 2.0, 3.0));
    assert_eq!(v.ywyw(), Vec4::new(2.0, 4.0, 2.0, 4.0));
    assert_eq!(v.ywzx(), Vec4::new(2.0, 4.0, 3.0, 1.0));
    assert_eq!(v.ywzy(), Vec4::new(2.0, 4.0, 3.0, 2.0));
    assert_eq!(v.ywzz(), Vec4::new(2.0, 4.0, 3.0, 3.0));
    assert_eq!(v.ywzw(), Vec4::new(2.0, 4.0, 3.0, 4.0));
    assert_eq!(v.ywwx(), Vec4::new(2.0, 4.0, 4.0, 1.0));
    assert_eq!(v.ywwy(), Vec4::new(2.0, 4.0, 4.0, 2.0));
    assert_eq!(v.ywwz(), Vec4::new(2.0, 4.0, 4.0, 3.0));
    assert_eq!(v.ywww(), Vec4::new(2.0, 4.0, 4.0, 4.0));
    assert_eq!(v.zxxx(), Vec4::new(3.0, 1.0, 1.0, 1.0));
    assert_eq!(v.zxxy(), Vec4::new(3.0, 1.0, 1.0, 2.0));
    assert_eq!(v.zxxz(), Vec4::new(3.0, 1.0, 1.0, 3.0));
    assert_eq!(v.zxxw(), Vec4::new(3.0, 1.0, 1.0, 4.0));
    assert_eq!(v.zxyx(), Vec4::new(3.0, 1.0, 2.0, 1.0));
    assert_eq!(v.zxyy(), Vec4::new(3.0, 1.0, 2.0, 2.0));
    assert_eq!(v.zxyz(), Vec4::new(3.0, 1.0, 2.0, 3.0));
    assert_eq!(v.zxyw(), Vec4::new(3.0, 1.0, 2.0, 4.0));
    assert_eq!(v.zxzx(), Vec4::new(3.0, 1.0, 3.0, 1.0));
    assert_eq!(v.zxzy(), Vec4::new(3.0, 1.0, 3.0, 2.0));
    assert_eq!(v.zxzz(), Vec4::new(3.0, 1.0, 3.0, 3.0));
    assert_eq!(v.zxzw(), Vec4::new(3.0, 1.0, 3.0, 4.0));
    assert_eq!(v.zxwx(), Vec4::new(3.0, 1.0, 4.0, 1.0));
    assert_eq!(v.zxwy(), Vec4::new(3.0, 1.0, 4.0, 2.0));
    assert_eq!(v.zxwz(), Vec4::new(3.0, 1.0, 4.0, 3.0));
    assert_eq!(v.zxww(), Vec4::new(3.0, 1.0, 4.0, 4.0));
    assert_eq!(v.zyxx(), Vec4::new(3.0, 2.0, 1.0, 1.0));
    assert_eq!(v.zyxy(), Vec4::new(3.0, 2.0, 1.0, 2.0));
    assert_eq!(v.zyxz(), Vec4::new(3.0, 2.0, 1.0, 3.0));
    assert_eq!(v.zyxw(), Vec4::new(3.0, 2.0, 1.0, 4.0));
    assert_eq!(v.zyyx(), Vec4::new(3.0, 2.0, 2.0, 1.0));
    assert_eq!(v.zyyy(), Vec4::new(3.0, 2.0, 2.0, 2.0));
    assert_eq!(v.zyyz(), Vec4::new(3.0, 2.0, 2.0, 3.0));
    assert_eq!(v.zyyw(), Vec4::new(3.0, 2.0, 2.0, 4.0));
    assert_eq!(v.zyzx(), Vec4::new(3.0, 2.0, 3.0, 1.0));
    assert_eq!(v.zyzy(), Vec4::new(3.0, 2.0, 3.0, 2.0));
    assert_eq!(v.zyzz(), Vec4::new(3.0, 2.0, 3.0, 3.0));
    assert_eq!(v.zyzw(), Vec4::new(3.0, 2.0, 3.0, 4.0));
    assert_eq!(v.zywx(), Vec4::new(3.0, 2.0, 4.0, 1.0));
    assert_eq!(v.zywy(), Vec4::new(3.0, 2.0, 4.0, 2.0));
    assert_eq!(v.zywz(), Vec4::new(3.0, 2.0, 4.0, 3.0));
    assert_eq!(v.zyww(), Vec4::new(3.0, 2.0, 4.0, 4.0));
    assert_eq!(v.zzxx(), Vec4::new(3.0, 3.0, 1.0, 1.0));
    assert_eq!(v.zzxy(), Vec4::new(3.0, 3.0, 1.0, 2.0));
    assert_eq!(v.zzxz(), Vec4::new(3.0, 3.0, 1.0, 3.0));
    assert_eq!(v.zzxw(), Vec4::new(3.0, 3.0, 1.0, 4.0));
    assert_eq!(v.zzyx(), Vec4::new(3.0, 3.0, 2.0, 1.0));
    assert_eq!(v.zzyy(), Vec4::new(3.0, 3.0, 2.0, 2.0));
    assert_eq!(v.zzyz(), Vec4::new(3.0, 3.0, 2.0, 3.0));
    assert_eq!(v.zzyw(), Vec4::new(3.0, 3.0, 2.0, 4.0));
    assert_eq!(v.zzzx(), Vec4::new(3.0, 3.0, 3.0, 1.0));
    assert_eq!(v.zzzy(), Vec4::new(3.0, 3.0, 3.0, 2.0));
    assert_eq!(v.zzzz(), Vec4::new(3.0, 3.0, 3.0, 3.0));
    assert_eq!(v.zzzw(), Vec4::new(3.0, 3.0, 3.0, 4.0));
    assert_eq!(v.zzwx(), Vec4::new(3.0, 3.0, 4.0, 1.0));
    assert_eq!(v.zzwy(), Vec4::new(3.0, 3.0, 4.0, 2.0));
    assert_eq!(v.zzwz(), Vec4::new(3.0, 3.0, 4.0, 3.0));
    assert_eq!(v.zzww(), Vec4::new(3.0, 3.0, 4.0, 4.0));
    assert_eq!(v.zwxx(), Vec4::new(3.0, 4.0, 1.0, 1.0));
    assert_eq!(v.zwxy(), Vec4::new(3.0, 4.0, 1.0, 2.0));
    assert_eq!(v.zwxz(), Vec4::new(3.0, 4.0, 1.0, 3.0));
    assert_eq!(v.zwxw(), Vec4::new(3.0, 4.0, 1.0, 4.0));
    assert_eq!(v.zwyx(), Vec4::new(3.0, 4.0, 2.0, 1.0));
    assert_eq!(v.zwyy(), Vec4::new(3.0, 4.0, 2.0, 2.0));
    assert_eq!(v.zwyz(), Vec4::new(3.0, 4.0, 2.0, 3.0));
    assert_eq!(v.zwyw(), Vec4::new(3.0, 4.0, 2.0, 4.0));
    assert_eq!(v.zwzx(), Vec4::new(3.0, 4.0, 3.0, 1.0));
    assert_eq!(v.zwzy(), Vec4::new(3.0, 4.0, 3.0, 2.0));
    assert_eq!(v.zwzz(), Vec4::new(3.0, 4.0, 3.0, 3.0));
    assert_eq!(v.zwzw(), Vec4::new(3.0, 4.0, 3.0, 4.0));
    assert_eq!(v.zwwx(), Vec4::new(3.0, 4.0, 4.0, 1.0));
    assert_eq!(v.zwwy(), Vec4::new(3.0, 4.0, 4.0, 2.0));
    assert_eq!(v.zwwz(), Vec4::new(3.0, 4.0, 4.0, 3.0));
    assert_eq!(v.zwww(), Vec4::new(3.0, 4.0, 4.0, 4.0));
    assert_eq!(v.wxxx(), Vec4::new(4.0, 1.0, 1.0, 1.0));
    assert_eq!(v.wxxy(), Vec4::new(4.0, 1.0, 1.0, 2.0));
    assert_eq!(v.wxxz(), Vec4::new(4.0, 1.0, 1.0, 3.0));
    assert_eq!(v.wxxw(), Vec4::new(4.0, 1.0, 1.0, 4.0));
    assert_eq!(v.wxyx(), Vec4::new(4.0, 1.0, 2.0, 1.0));
    assert_eq!(v.wxyy(), Vec4::new(4.0, 1.0, 2.0, 2.0));
    assert_eq!(v.wxyz(), Vec4::new(4.0, 1.0, 2.0, 3.0));
    assert_eq!(v.wxyw(), Vec4::new(4.0, 1.0, 2.0, 4.0));
    assert_eq!(v.wxzx(), Vec4::new(4.0, 1.0, 3.0, 1.0));
    assert_eq!(v.wxzy(), Vec4::new(4.0, 1.0, 3.0, 2.0));
    assert_eq!(v.wxzz(), Vec4::new(4.0, 1.0, 3.0, 3.0));
    assert_eq!(v.wxzw(), Vec4::new(4.0, 1.0, 3.0, 4.0));
    assert_eq!(v.wxwx(), Vec4::new(4.0, 1.0, 4.0, 1.0));
    assert_eq!(v.wxwy(), Vec4::new(4.0, 1.0, 4.0, 2.0));
    assert_eq!(v.wxwz(), Vec4::new(4.0, 1.0, 4.0, 3.0));
    assert_eq!(v.wxww(), Vec4::new(4.0, 1.0, 4.0, 4.0));
    assert_eq!(v.wyxx(), Vec4::new(4.0, 2.0, 1.0, 1.0));
    assert_eq!(v.wyxy(), Vec4::new(4.0, 2.0, 1.0, 2.0));
    assert_eq!(v.wyxz(), Vec4::new(4.0, 2.0, 1.0, 3.0));
    assert_eq!(v.wyxw(), Vec4::new(4.0, 2.0, 1.0, 4.0));
    assert_eq!(v.wyyx(), Vec4::new(4.0, 2.0, 2.0, 1.0));
    assert_eq!(v.wyyy(), Vec4::new(4.0, 2.0, 2.0, 2.0));
    assert_eq!(v.wyyz(), Vec4::new(4.0, 2.0, 2.0, 3.0));
    assert_eq!(v.wyyw(), Vec4::new(4.0, 2.0, 2.0, 4.0));
    assert_eq!(v.wyzx(), Vec4::new(4.0, 2.0, 3.0, 1.0));
    assert_eq!(v.wyzy(), Vec4::new(4.0, 2.0, 3.0, 2.0));
    assert_eq!(v.wyzz(), Vec4::new(4.0, 2.0, 3.0, 3.0));
    assert_eq!(v.wyzw(), Vec4::new(4.0, 2.0, 3.0, 4.0));
    assert_eq!(v.wywx(), Vec4::new(4.0, 2.0, 4.0, 1.0));
    assert_eq!(v.wywy(), Vec4::new(4.0, 2.0, 4.0, 2.0));
    assert_eq!(v.wywz(), Vec4::new(4.0, 2.0, 4.0, 3.0));
    assert_eq!(v.wyww(), Vec4::new(4.0, 2.0, 4.0, 4.0));
    assert_eq!(v.wzxx(), Vec4::new(4.0, 3.0, 1.0, 1.0));
    assert_eq!(v.wzxy(), Vec4::new(4.0, 3.0, 1.0, 2.0));
    assert_eq!(v.wzxz(), Vec4::new(4.0, 3.0, 1.0, 3.0));
    assert_eq!(v.wzxw(), Vec4::new(4.0, 3.0, 1.0, 4.0));
    assert_eq!(v.wzyx(), Vec4::new(4.0, 3.0, 2.0, 1.0));
    assert_eq!(v.wzyy(), Vec4::new(4.0, 3.0, 2.0, 2.0));
    assert_eq!(v.wzyz(), Vec4::new(4.0, 3.0, 2.0, 3.0));
    assert_eq!(v.wzyw(), Vec4::new(4.0, 3.0, 2.0, 4.0));
    assert_eq!(v.wzzx(), Vec4::new(4.0, 3.0, 3.0, 1.0));
    assert_eq!(v.wzzy(), Vec4::new(4.0, 3.0, 3.0, 2.0));
    assert_eq!(v.wzzz(), Vec4::new(4.0, 3.0, 3.0, 3.0));
    assert_eq!(v.wzzw(), Vec4::new(4.0, 3.0, 3.0, 4.0));
    assert_eq!(v.wzwx(), Vec4::new(4.0, 3.0, 4.0, 1.0));
    assert_eq!(v.wzwy(), Vec4::new(4.0, 3.0, 4.0, 2.0));
    assert_eq!(v.wzwz(), Vec4::new(4.0, 3.0, 4.0, 3.0));
    assert_eq!(v.wzww(), Vec4::new(4.0, 3.0, 4.0, 4.0));
    assert_eq!(v.wwxx(), Vec4::new(4.0, 4.0, 1.0, 1.0));
    assert_eq!(v.wwxy(), Vec4::new(4.0, 4.0, 1.0, 2.0));
    assert_eq!(v.wwxz(), Vec4::new(4.0, 4.0, 1.0, 3.0));
    assert_eq!(v.wwxw(), Vec4::new(4.0, 4.0, 1.0, 4.0));
    assert_eq!(v.wwyx(), Vec4::new(4.0, 4.0, 2.0, 1.0));
    assert_eq!(v.wwyy(), Vec4::new(4.0, 4.0, 2.0, 2.0));
    assert_eq!(v.wwyz(), Vec4::new(4.0, 4.0, 2.0, 3.0));
    assert_eq!(v.wwyw(), Vec4::new(4.0, 4.0, 2.0, 4.0));
    assert_eq!(v.wwzx(), Vec4::new(4.0, 4.0, 3.0, 1.0));
    assert_eq!(v.wwzy(), Vec4::new(4.0, 4.0, 3.0, 2.0));
    assert_eq!(v.wwzz(), Vec4::new(4.0, 4.0, 3.0, 3.0));
    assert_eq!(v.wwzw(), Vec4::new(4.0, 4.0, 3.0, 4.0));
    assert_eq!(v.wwwx(), Vec4::new(4.0, 4.0, 4.0, 1.0));
    assert_eq!(v.wwwy(), Vec4::new(4.0, 4.0, 4.0, 2.0));
    assert_eq!(v.wwwz(), Vec4::new(4.0, 4.0, 4.0, 3.0));
    assert_eq!(v.wwww(), Vec4::new(4.0, 4.0, 4.0, 4.0));
    assert_eq!(v.xxx(), Vec3::new(1.0, 1.0, 1.0));
    assert_eq!(v.xxy(), Vec3::new(1.0, 1.0, 2.0));
    assert_eq!(v.xxz(), Vec3::new(1.0, 1.0, 3.0));
    assert_eq!(v.xxw(), Vec3::new(1.0, 1.0, 4.0));
    assert_eq!(v.xyx(), Vec3::new(1.0, 2.0, 1.0));
    assert_eq!(v.xyy(), Vec3::new(1.0, 2.0, 2.0));
    assert_eq!(v.xyz(), Vec3::new(1.0, 2.0, 3.0));
    assert_eq!(v.xyw(), Vec3::new(1.0, 2.0, 4.0));
    assert_eq!(v.xzx(), Vec3::new(1.0, 3.0, 1.0));
    assert_eq!(v.xzy(), Vec3::new(1.0, 3.0, 2.0));
    assert_eq!(v.xzz(), Vec3::new(1.0, 3.0, 3.0));
    assert_eq!(v.xzw(), Vec3::new(1.0, 3.0, 4.0));
    assert_eq!(v.xwx(), Vec3::new(1.0, 4.0, 1.0));
    assert_eq!(v.xwy(), Vec3::new(1.0, 4.0, 2.0));
    assert_eq!(v.xwz(), Vec3::new(1.0, 4.0, 3.0));
    assert_eq!(v.xww(), Vec3::new(1.0, 4.0, 4.0));
    assert_eq!(v.yxx(), Vec3::new(2.0, 1.0, 1.0));
    assert_eq!(v.yxy(), Vec3::new(2.0, 1.0, 2.0));
    assert_eq!(v.yxz(), Vec3::new(2.0, 1.0, 3.0));
    assert_eq!(v.yxw(), Vec3::new(2.0, 1.0, 4.0));
    assert_eq!(v.yyx(), Vec3::new(2.0, 2.0, 1.0));
    assert_eq!(v.yyy(), Vec3::new(2.0, 2.0, 2.0));
    assert_eq!(v.yyz(), Vec3::new(2.0, 2.0, 3.0));
    assert_eq!(v.yyw(), Vec3::new(2.0, 2.0, 4.0));
    assert_eq!(v.yzx(), Vec3::new(2.0, 3.0, 1.0));
    assert_eq!(v.yzy(), Vec3::new(2.0, 3.0, 2.0));
    assert_eq!(v.yzz(), Vec3::new(2.0, 3.0, 3.0));
    assert_eq!(v.yzw(), Vec3::new(2.0, 3.0, 4.0));
    assert_eq!(v.ywx(), Vec3::new(2.0, 4.0, 1.0));
    assert_eq!(v.ywy(), Vec3::new(2.0, 4.0, 2.0));
    assert_eq!(v.ywz(), Vec3::new(2.0, 4.0, 3.0));
    assert_eq!(v.yww(), Vec3::new(2.0, 4.0, 4.0));
    assert_eq!(v.zxx(), Vec3::new(3.0, 1.0, 1.0));
    assert_eq!(v.zxy(), Vec3::new(3.0, 1.0, 2.0));
    assert_eq!(v.zxz(), Vec3::new(3.0, 1.0, 3.0));
    assert_eq!(v.zxw(), Vec3::new(3.0, 1.0, 4.0));
    assert_eq!(v.zyx(), Vec3::new(3.0, 2.0, 1.0));
    assert_eq!(v.zyy(), Vec3::new(3.0, 2.0, 2.0));
    assert_eq!(v.zyz(), Vec3::new(3.0, 2.0, 3.0));
    assert_eq!(v.zyw(), Vec3::new(3.0, 2.0, 4.0));
    assert_eq!(v.zzx(), Vec3::new(3.0, 3.0, 1.0));
    assert_eq!(v.zzy(), Vec3::new(3.0, 3.0, 2.0));
    assert_eq!(v.zzz(), Vec3::new(3.0, 3.0, 3.0));
    assert_eq!(v.zzw(), Vec3::new(3.0, 3.0, 4.0));
    assert_eq!(v.zwx(), Vec3::new(3.0, 4.0, 1.0));
    assert_eq!(v.zwy(), Vec3::new(3.0, 4.0, 2.0));
    assert_eq!(v.zwz(), Vec3::new(3.0, 4.0, 3.0));
    assert_eq!(v.zww(), Vec3::new(3.0, 4.0, 4.0));
    assert_eq!(v.wxx(), Vec3::new(4.0, 1.0, 1.0));
    assert_eq!(v.wxy(), Vec3::new(4.0, 1.0, 2.0));
    assert_eq!(v.wxz(), Vec3::new(4.0, 1.0, 3.0));
    assert_eq!(v.wxw(), Vec3::new(4.0, 1.0, 4.0));
    assert_eq!(v.wyx(), Vec3::new(4.0, 2.0, 1.0));
    assert_eq!(v.wyy(), Vec3::new(4.0, 2.0, 2.0));
    assert_eq!(v.wyz(), Vec3::new(4.0, 2.0, 3.0));
    assert_eq!(v.wyw(), Vec3::new(4.0, 2.0, 4.0));
    assert_eq!(v.wzx(), Vec3::new(4.0, 3.0, 1.0));
    assert_eq!(v.wzy(), Vec3::new(4.0, 3.0, 2.0));
    assert_eq!(v.wzz(), Vec3::new(4.0, 3.0, 3.0));
    assert_eq!(v.wzw(), Vec3::new(4.0, 3.0, 4.0));
    assert_eq!(v.wwx(), Vec3::new(4.0, 4.0, 1.0));
    assert_eq!(v.wwy(), Vec3::new(4.0, 4.0, 2.0));
    assert_eq!(v.wwz(), Vec3::new(4.0, 4.0, 3.0));
    assert_eq!(v.www(), Vec3::new(4.0, 4.0, 4.0));
    assert_eq!(v.xx(), Vec2::new(1.0, 1.0));
    assert_eq!(v.xy(), Vec2::new(1.0, 2.0));
    assert_eq!(v.xz(), Vec2::new(1.0, 3.0));
    assert_eq!(v.xw(), Vec2::new(1.0, 4.0));
    assert_eq!(v.yx(), Vec2::new(2.0, 1.0));
    assert_eq!(v.yy(), Vec2::new(2.0, 2.0));
    assert_eq!(v.yz(), Vec2::new(2.0, 3.0));
    assert_eq!(v.yw(), Vec2::new(2.0, 4.0));
    assert_eq!(v.zx(), Vec2::new(3.0, 1.0));
    assert_eq!(v.zy(), Vec2::new(3.0, 2.0));
    assert_eq!(v.zz(), Vec2::new(3.0, 3.0));
    assert_eq!(v.zw(), Vec2::new(3.0, 4.0));
    assert_eq!(v.wx(), Vec2::new(4.0, 1.0));
    assert_eq!(v.wy(), Vec2::new(4.0, 2.0));
    assert_eq!(v.wz(), Vec2::new(4.0, 3.0));
    assert_eq!(v.ww(), Vec2::new(4.0, 4.0));
}

#[test]
fn test_vec3a_swizzles() {
    let v = Vec3A::new(1.0, 2.0, 3.0);
    assert_eq!(v.xxxx(), Vec4::new(1.0, 1.0, 1.0, 1.0));
    assert_eq!(v.xxxy(), Vec4::new(1.0, 1.0, 1.0, 2.0));
    assert_eq!(v.xxxz(), Vec4::new(1.0, 1.0, 1.0, 3.0));
    assert_eq!(v.xxyx(), Vec4::new(1.0, 1.0, 2.0, 1.0));
    assert_eq!(v.xxyy(), Vec4::new(1.0, 1.0, 2.0, 2.0));
    assert_eq!(v.xxyz(), Vec4::new(1.0, 1.0, 2.0, 3.0));
    assert_eq!(v.xxzx(), Vec4::new(1.0, 1.0, 3.0, 1.0));
    assert_eq!(v.xxzy(), Vec4::new(1.0, 1.0, 3.0, 2.0));
    assert_eq!(v.xxzz(), Vec4::new(1.0, 1.0, 3.0, 3.0));
    assert_eq!(v.xyxx(), Vec4::new(1.0, 2.0, 1.0, 1.0));
    assert_eq!(v.xyxy(), Vec4::new(1.0, 2.0, 1.0, 2.0));
    assert_eq!(v.xyxz(), Vec4::new(1.0, 2.0, 1.0, 3.0));
    assert_eq!(v.xyyx(), Vec4::new(1.0, 2.0, 2.0, 1.0));
    assert_eq!(v.xyyy(), Vec4::new(1.0, 2.0, 2.0, 2.0));
    assert_eq!(v.xyyz(), Vec4::new(1.0, 2.0, 2.0, 3.0));
    assert_eq!(v.xyzx(), Vec4::new(1.0, 2.0, 3.0, 1.0));
    assert_eq!(v.xyzy(), Vec4::new(1.0, 2.0, 3.0, 2.0));
    assert_eq!(v.xyzz(), Vec4::new(1.0, 2.0, 3.0, 3.0));
    assert_eq!(v.xzxx(), Vec4::new(1.0, 3.0, 1.0, 1.0));
    assert_eq!(v.xzxy(), Vec4::new(1.0, 3.0, 1.0, 2.0));
    assert_eq!(v.xzxz(), Vec4::new(1.0, 3.0, 1.0, 3.0));
    assert_eq!(v.xzyx(), Vec4::new(1.0, 3.0, 2.0, 1.0));
    assert_eq!(v.xzyy(), Vec4::new(1.0, 3.0, 2.0, 2.0));
    assert_eq!(v.xzyz(), Vec4::new(1.0, 3.0, 2.0, 3.0));
    assert_eq!(v.xzzx(), Vec4::new(1.0, 3.0, 3.0, 1.0));
    assert_eq!(v.xzzy(), Vec4::new(1.0, 3.0, 3.0, 2.0));
    assert_eq!(v.xzzz(), Vec4::new(1.0, 3.0, 3.0, 3.0));
    assert_eq!(v.yxxx(), Vec4::new(2.0, 1.0, 1.0, 1.0));
    assert_eq!(v.yxxy(), Vec4::new(2.0, 1.0, 1.0, 2.0));
    assert_eq!(v.yxxz(), Vec4::new(2.0, 1.0, 1.0, 3.0));
    assert_eq!(v.yxyx(), Vec4::new(2.0, 1.0, 2.0, 1.0));
    assert_eq!(v.yxyy(), Vec4::new(2.0, 1.0, 2.0, 2.0));
    assert_eq!(v.yxyz(), Vec4::new(2.0, 1.0, 2.0, 3.0));
    assert_eq!(v.yxzx(), Vec4::new(2.0, 1.0, 3.0, 1.0));
    assert_eq!(v.yxzy(), Vec4::new(2.0, 1.0, 3.0, 2.0));
    assert_eq!(v.yxzz(), Vec4::new(2.0, 1.0, 3.0, 3.0));
    assert_eq!(v.yyxx(), Vec4::new(2.0, 2.0, 1.0, 1.0));
    assert_eq!(v.yyxy(), Vec4::new(2.0, 2.0, 1.0, 2.0));
    assert_eq!(v.yyxz(), Vec4::new(2.0, 2.0, 1.0, 3.0));
    assert_eq!(v.yyyx(), Vec4::new(2.0, 2.0, 2.0, 1.0));
    assert_eq!(v.yyyy(), Vec4::new(2.0, 2.0, 2.0, 2.0));
    assert_eq!(v.yyyz(), Vec4::new(2.0, 2.0, 2.0, 3.0));
    assert_eq!(v.yyzx(), Vec4::new(2.0, 2.0, 3.0, 1.0));
    assert_eq!(v.yyzy(), Vec4::new(2.0, 2.0, 3.0, 2.0));
    assert_eq!(v.yyzz(), Vec4::new(2.0, 2.0, 3.0, 3.0));
    assert_eq!(v.yzxx(), Vec4::new(2.0, 3.0, 1.0, 1.0));
    assert_eq!(v.yzxy(), Vec4::new(2.0, 3.0, 1.0, 2.0));
    assert_eq!(v.yzxz(), Vec4::new(2.0, 3.0, 1.0, 3.0));
    assert_eq!(v.yzyx(), Vec4::new(2.0, 3.0, 2.0, 1.0));
    assert_eq!(v.yzyy(), Vec4::new(2.0, 3.0, 2.0, 2.0));
    assert_eq!(v.yzyz(), Vec4::new(2.0, 3.0, 2.0, 3.0));
    assert_eq!(v.yzzx(), Vec4::new(2.0, 3.0, 3.0, 1.0));
    assert_eq!(v.yzzy(), Vec4::new(2.0, 3.0, 3.0, 2.0));
    assert_eq!(v.yzzz(), Vec4::new(2.0, 3.0, 3.0, 3.0));
    assert_eq!(v.zxxx(), Vec4::new(3.0, 1.0, 1.0, 1.0));
    assert_eq!(v.zxxy(), Vec4::new(3.0, 1.0, 1.0, 2.0));
    assert_eq!(v.zxxz(), Vec4::new(3.0, 1.0, 1.0, 3.0));
    assert_eq!(v.zxyx(), Vec4::new(3.0, 1.0, 2.0, 1.0));
    assert_eq!(v.zxyy(), Vec4::new(3.0, 1.0, 2.0, 2.0));
    assert_eq!(v.zxyz(), Vec4::new(3.0, 1.0, 2.0, 3.0));
    assert_eq!(v.zxzx(), Vec4::new(3.0, 1.0, 3.0, 1.0));
    assert_eq!(v.zxzy(), Vec4::new(3.0, 1.0, 3.0, 2.0));
    assert_eq!(v.zxzz(), Vec4::new(3.0, 1.0, 3.0, 3.0));
    assert_eq!(v.zyxx(), Vec4::new(3.0, 2.0, 1.0, 1.0));
    assert_eq!(v.zyxy(), Vec4::new(3.0, 2.0, 1.0, 2.0));
    assert_eq!(v.zyxz(), Vec4::new(3.0, 2.0, 1.0, 3.0));
    assert_eq!(v.zyyx(), Vec4::new(3.0, 2.0, 2.0, 1.0));
    assert_eq!(v.zyyy(), Vec4::new(3.0, 2.0, 2.0, 2.0));
    assert_eq!(v.zyyz(), Vec4::new(3.0, 2.0, 2.0, 3.0));
    assert_eq!(v.zyzx(), Vec4::new(3.0, 2.0, 3.0, 1.0));
    assert_eq!(v.zyzy(), Vec4::new(3.0, 2.0, 3.0, 2.0));
    assert_eq!(v.zyzz(), Vec4::new(3.0, 2.0, 3.0, 3.0));
    assert_eq!(v.zzxx(), Vec4::new(3.0, 3.0, 1.0, 1.0));
    assert_eq!(v.zzxy(), Vec4::new(3.0, 3.0, 1.0, 2.0));
    assert_eq!(v.zzxz(), Vec4::new(3.0, 3.0, 1.0, 3.0));
    assert_eq!(v.zzyx(), Vec4::new(3.0, 3.0, 2.0, 1.0));
    assert_eq!(v.zzyy(), Vec4::new(3.0, 3.0, 2.0, 2.0));
    assert_eq!(v.zzyz(), Vec4::new(3.0, 3.0, 2.0, 3.0));
    assert_eq!(v.zzzx(), Vec4::new(3.0, 3.0, 3.0, 1.0));
    assert_eq!(v.zzzy(), Vec4::new(3.0, 3.0, 3.0, 2.0));
    assert_eq!(v.zzzz(), Vec4::new(3.0, 3.0, 3.0, 3.0));
    assert_eq!(v.xxx(), Vec3A::new(1.0, 1.0, 1.0));
    assert_eq!(v.xxy(), Vec3A::new(1.0, 1.0, 2.0));
    assert_eq!(v.xxz(), Vec3A::new(1.0, 1.0, 3.0));
    assert_eq!(v.xyx(), Vec3A::new(1.0, 2.0, 1.0));
    assert_eq!(v.xyy(), Vec3A::new(1.0, 2.0, 2.0));
    assert_eq!(v.xzx(), Vec3A::new(1.0, 3.0, 1.0));
    assert_eq!(v.xzy(), Vec3A::new(1.0, 3.0, 2.0));
    assert_eq!(v.xzz(), Vec3A::new(1.0, 3.0, 3.0));
    assert_eq!(v.yxx(), Vec3A::new(2.0, 1.0, 1.0));
    assert_eq!(v.yxy(), Vec3A::new(2.0, 1.0, 2.0));
    assert_eq!(v.yxz(), Vec3A::new(2.0, 1.0, 3.0));
    assert_eq!(v.yyx(), Vec3A::new(2.0, 2.0, 1.0));
    assert_eq!(v.yyy(), Vec3A::new(2.0, 2.0, 2.0));
    assert_eq!(v.yyz(), Vec3A::new(2.0, 2.0, 3.0));
    assert_eq!(v.yzx(), Vec3A::new(2.0, 3.0, 1.0));
    assert_eq!(v.yzy(), Vec3A::new(2.0, 3.0, 2.0));
    assert_eq!(v.yzz(), Vec3A::new(2.0, 3.0, 3.0));
    assert_eq!(v.zxx(), Vec3A::new(3.0, 1.0, 1.0));
    assert_eq!(v.zxy(), Vec3A::new(3.0, 1.0, 2.0));
    assert_eq!(v.zxz(), Vec3A::new(3.0, 1.0, 3.0));
    assert_eq!(v.zyx(), Vec3A::new(3.0, 2.0, 1.0));
    assert_eq!(v.zyy(), Vec3A::new(3.0, 2.0, 2.0));
    assert_eq!(v.zyz(), Vec3A::new(3.0, 2.0, 3.0));
    assert_eq!(v.zzx(), Vec3A::new(3.0, 3.0, 1.0));
    assert_eq!(v.zzy(), Vec3A::new(3.0, 3.0, 2.0));
    assert_eq!(v.zzz(), Vec3A::new(3.0, 3.0, 3.0));
    assert_eq!(v.xx(), Vec2::new(1.0, 1.0));
    assert_eq!(v.xy(), Vec2::new(1.0, 2.0));
    assert_eq!(v.xz(), Vec2::new(1.0, 3.0));
    assert_eq!(v.yx(), Vec2::new(2.0, 1.0));
    assert_eq!(v.yy(), Vec2::new(2.0, 2.0));
    assert_eq!(v.yz(), Vec2::new(2.0, 3.0));
    assert_eq!(v.zx(), Vec2::new(3.0, 1.0));
    assert_eq!(v.zy(), Vec2::new(3.0, 2.0));
    assert_eq!(v.zz(), Vec2::new(3.0, 3.0));
}
